{"version":3,"sources":["Components/PokiCard.js","Components/PokiSelected.js","App.js","serviceWorker.js","index.js"],"names":["PokiCard","state","name","img","index","type","typeTwo","_this2","this","_this$props","props","url","split","length","concat","targetUrl","axios","get","then","res","setState","data","types","react_default","a","createElement","className","src","alt","Component","PokiSelected","image","pokiID","defence","hp","specialAttack","specialDefense","speed","weight","totalMoves","App","pokemons","defense","attack","limit","status","loadMore","limits","_this","results","handlePock","id","sprites","front_default","stats","base_stat","moves","_this3","pokemonList","map","pokemon","key","onClick","PokiCard_PokiCard","IosRefresh_default","fontSize","color","rotate","href","Object","defineProperty","PokiSelected_PokiSelected","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kTAIqBA,6MAEjBC,MAAQ,CACJC,KAAM,GACNC,IAAM,GACNC,MAAQ,GACRC,KAAM,GACNC,QAAS,uFAGM,IAAAC,EAAAC,KAAAC,EACKD,KAAKE,MAAlBR,EADQO,EACRP,KAAMS,EADEF,EACFE,IACPP,EAAQO,EAAIC,MAAM,KAAKD,EAAIC,MAAM,KAAKC,OAAS,GAC/CV,EAAG,kEAAAW,OAAqEV,EAArE,iBAETW,EAAYJ,EACZK,IAAMC,IAFS,uCAEMF,GACpBG,KAAK,SAAAC,GACFZ,EAAKa,SAAS,CACVf,KAAMc,EAAIE,KAAKC,MAAM,GAAGjB,KAAKH,KAC7BA,OACAC,QAEAgB,EAAIE,KAAKC,MAAM,IACff,EAAKa,SAAU,CACfd,QAAUa,EAAIE,KAAKC,MAAM,GAAGjB,KAAKH,0CAO7C,OACEqB,EAAAC,EAAAC,cAAA,OAAKC,UAAWlB,KAAKP,MAAMI,MACzBkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAKnB,KAAKP,MAAME,IAAKyB,IAAKpB,KAAKP,MAAMC,QAE3CqB,EAAAC,EAAAC,cAAA,UAAKjB,KAAKP,MAAMC,MAChBqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,QAAMC,UAAWlB,KAAKP,MAAMI,MAAOG,KAAKP,MAAMI,MAArE,IAAkFkB,EAAAC,EAAAC,cAAA,QAAMC,UAAWlB,KAAKP,MAAMK,SAAUE,KAAKP,MAAMK,kBAtCrGuB,aCFjBC,mLAIjB,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZlB,KAAKE,MAAMqB,OAASR,EAAAC,EAAAC,cAAA,OAAKE,IAAKnB,KAAKE,MAAMqB,MAAOH,IAAI,YACpDpB,KAAKE,MAAMR,MAAQM,KAAKE,MAAMsB,QAAUT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQlB,KAAKE,MAAMR,KAAhC,KAAwCM,KAAKE,MAAMsB,QAC5FT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,SAAkClB,KAAKE,MAAML,MAAQG,KAAKE,MAAMJ,SAAWiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAML,KAAtC,IAA6CG,KAAKE,MAAMJ,UAErIiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,YAAqClB,KAAKE,MAAMuB,SAAWV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAMuB,UAEnGV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,OAAgClB,KAAKE,MAAMwB,IAAMX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAMwB,KAEzFX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,cAAuClB,KAAKE,MAAMyB,eAAiBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAMyB,gBAE3GZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,eAAwClB,KAAKE,MAAM0B,gBAAkBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAM0B,iBAE5Gb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,UAAmClB,KAAKE,MAAM2B,OAASd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAM2B,QAE7Fd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,WAAoClB,KAAKE,MAAM4B,QAAUf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAM4B,SAEjGf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,gBAAyClB,KAAKE,MAAM6B,YAAchB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,IAA2BlB,KAAKE,MAAM6B,sBA/BzEV,aCuI3BW,6MA/HfvC,MAAQ,CACNwC,SAAW,GACXT,OAAS,GACT9B,KAAO,GACPG,KAAM,GACNC,QAAU,GACVyB,MAAO,GACPM,MAAQ,GACRD,eAAiB,GACjBD,cAAgB,GAChBO,QAAU,GACVC,OAAU,GACVT,GAAM,GACNI,OAAQ,GACRC,WAAY,GACZK,MAAQ,GACRC,OAAS,YAGXC,SAAW,WACT,IAAIC,EAASC,EAAK/C,MAAM2C,MACxBI,EAAK5B,SAAS,CACZwB,MAAQG,EAAS,KAEnB,IACAhC,EAAS,2CAAAD,OAA8CiC,EAA9C,eACP/B,IAAMC,IAFO,uCAEQF,GAClBG,KAAK,SAAAC,GACN6B,EAAK5B,SAAS,CACVqB,SAAWtB,EAAIE,KAAK4B,eAiB5BC,WAAa,SAACvC,GACZ,IACAI,EAAYJ,EACZK,IAAMC,IAFS,uCAEMF,GACpBG,KAAK,SAAAC,GACJ6B,EAAK5B,SAAS,CACZY,OAASb,EAAIE,KAAK8B,GAClBjD,KAAOiB,EAAIE,KAAKnB,KAChBG,KAAMc,EAAIE,KAAKC,MAAM,GAAGjB,KAAKH,KAC7B6B,MAAOZ,EAAIE,KAAK+B,QAAQC,cACxBhB,MAAQlB,EAAIE,KAAKiC,MAAM,GAAGC,UAC1BnB,eAAiBjB,EAAIE,KAAKiC,MAAM,GAAGC,UACnCpB,cAAgBhB,EAAIE,KAAKiC,MAAM,GAAGC,UAClCb,QAAUvB,EAAIE,KAAKiC,MAAM,GAAGC,UAC5BZ,OAAUxB,EAAIE,KAAKiC,MAAM,GAAGC,UAC5BrB,GAAMf,EAAIE,KAAKiC,MAAM,GAAGC,UACxBjB,OAAQnB,EAAIE,KAAKiB,OACjBC,WAAapB,EAAIE,KAAKmC,MAAM3C,OAC5BgC,OAAQ,YAEN1B,EAAIE,KAAKC,MAAM,IAClB0B,EAAK5B,SAAU,CACbd,QAAUa,EAAIE,KAAKC,MAAM,GAAGjB,KAAKH,8FAlCpB,IAAAK,EAAAC,KACdoC,EAAQpC,KAAKP,MAAM2C,MAEnB7B,EAAS,2CAAAD,OAA8C8B,EAA9C,eACb5B,IAAMC,IAFS,uCAEMF,GACpBG,KAAK,SAAAC,GACJZ,EAAKa,SAAS,CACVqB,SAAWtB,EAAIE,KAAK4B,6CAkCjB,IAAAQ,EAAAjD,KAEAiC,EAAYjC,KAAKP,MAAjBwC,SACDiB,EAAcjB,EAAS5B,OAAU4B,EAASkB,IAAI,SAAAC,GAElD,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAemC,IAAKD,EAAQ1D,MACvCqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYoC,QAAS,WAAOL,EAAKP,WAAWU,EAAQjD,OACjEY,EAAAC,EAAAC,cAAEsC,EAAF,CAAW7D,KAAM0D,EAAQ1D,KACbS,IAAKiD,EAAQjD,IACbkD,IAAKD,EAAQ1D,WAMjCqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAYyC,SAAS,OAAOC,MAAM,iBAAiBC,QAAQ,IAD3D,yBAKA,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZgC,EACDnC,EAAAC,EAAAC,cAAA,OAAKqC,QAAStD,KAAKsC,SAAUpB,UAAU,YAAY0C,KAAK,KAAxD,cAEF7C,EAAAC,EAAAC,cAAA,MAAA4C,OAAAC,EAAA,EAAAD,CAAA,CAAK3C,UAAU,mBAAf,YAA4ClB,KAAKP,MAAM4C,QACrDtB,EAAAC,EAAAC,cAAC8C,EAAD,CACevC,OAAQxB,KAAKP,MAAM+B,OACnBD,MAAOvB,KAAKP,MAAM8B,MAClB7B,KAAMM,KAAKP,MAAMC,KACjBG,KAAMG,KAAKP,MAAMI,KACjBC,QAASE,KAAKP,MAAMK,QACpB+B,MAAO7B,KAAKP,MAAMoC,MAClBD,eAAgB5B,KAAKP,MAAMmC,eAC3BD,cAAe3B,KAAKP,MAAMkC,cAC1BF,QAASzB,KAAKP,MAAMyC,QACpBC,OAAQnC,KAAKP,MAAM0C,OACnBT,GAAI1B,KAAKP,MAAMiC,GACfI,OAAQ9B,KAAKP,MAAMqC,OACnBC,WAAY/B,KAAKP,MAAMsC,uBAxHtCV,aCIE2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC","file":"static/js/main.69f7c1ce.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport IosRefresh from 'react-ionicons/lib/IosRefresh'\r\n\r\nexport default class PokiCard extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        img : '',\r\n        index : '',\r\n        type: '',\r\n        typeTwo: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {name, url} = this.props;\r\n        const index = url.split('/')[url.split('/').length - 2];\r\n        const img = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${index}.png?raw=true`;\r\n        let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n        targetUrl = url\r\n        axios.get(proxyUrl + targetUrl)\r\n        .then(res => {\r\n            this.setState({\r\n                type: res.data.types[0].type.name,\r\n                name,\r\n                img\r\n            })\r\n            if (res.data.types[1]) {\r\n                this.setState ({\r\n                typeTwo : res.data.types[1].type.name\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.type}>\r\n        <div className='img-wrapper'>\r\n         <img src={this.state.img} alt={this.state.name}/>\r\n        </div>\r\n        <h3>{this.state.name}</h3>\r\n        <div className='types'><span className={this.state.type}>{this.state.type}</span> <span className={this.state.typeTwo}>{this.state.typeTwo}</span></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PokiSelected extends Component {\r\n\r\n      \r\n  render() {\r\n    return (\r\n      <div className=\"pokedex\">\r\n        {this.props.image && <img src={this.props.image} alt='pokemon'/> }\r\n        {this.props.name && this.props.pokiID && <p className='name'>{this.props.name} #{this.props.pokiID}</p> } \r\n        <div className='specials'>\r\n          <div className='type'>            \r\n            <div className='head'>Type </div>{this.props.type && this.props.typeTwo && <div className='content'> {this.props.type} {this.props.typeTwo}</div> } \r\n          </div>\r\n          <div className='info'>\r\n            <div className='head'>Defence </div>{this.props.defence && <div className='content'> {this.props.defence}</div>} \r\n          </div>\r\n          <div className='info'>\r\n            <div className='head'>HP </div>{this.props.hp && <div className='content'> {this.props.hp}</div>} \r\n          </div>\r\n          <div className='info'>\r\n            <div className='head'>SP Attack </div>{this.props.specialAttack && <div className='content'> {this.props.specialAttack}</div>} \r\n          </div>\r\n          <div className='info'>\r\n           <div className='head'>SP Defence </div>{this.props.specialDefense && <div className='content'> {this.props.specialDefense}</div>} \r\n          </div>\r\n          <div className='info'>\r\n           <div className='head'>Speed </div>{this.props.speed && <div className='content'> {this.props.speed}</div>} \r\n          </div>\r\n           <div className='info'>\r\n            <div className='head'>Weight </div>{this.props.weight && <div className='content'> {this.props.weight}</div>} \r\n          </div>\r\n          <div className='info'>\r\n           <div className='head'>Total moves </div>{this.props.totalMoves && <div className='content'> {this.props.totalMoves}</div>} \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport IosRefresh from 'react-ionicons/lib/IosRefresh'\nimport PokiCard from './Components/PokiCard'\nimport PokiSelected from './Components/PokiSelected'\n\n\nclass App extends Component {\n\nstate = {\n  pokemons : [],\n  pokiID : [],\n  name : [],\n  type: [],\n  typeTwo : [],\n  image: [],\n  speed : [],\n  specialDefense : [],\n  specialAttack : [],\n  defense : [],\n  attack :  [],\n  hp :  [],\n  weight: [],\n  totalMoves :[],\n  limit : 12,\n  status : 'hidden'\n}\n\nloadMore = () => {\n  let limits = this.state.limit;\n  this.setState({\n    limit:  limits + 12 \n  })\n  let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n  targetUrl = `http://pokeapi.co/api/v1/pokemon/?limit=${limits}&offset=12.`\n    axios.get(proxyUrl + targetUrl)\n      .then(res => {\n      this.setState({\n          pokemons : res.data.results\n      })\n    })\n}\n\n  componentWillMount(){\n    let limit = this.state.limit;\n    let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n        targetUrl = `http://pokeapi.co/api/v1/pokemon/?limit=${limit}&offset=12.`\n    axios.get(proxyUrl + targetUrl)\n    .then(res => {\n      this.setState({\n          pokemons : res.data.results\n      })\n    })\n  }\n\n  handlePock = (url) => {\n    let proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n    targetUrl = url\n    axios.get(proxyUrl + targetUrl)\n    .then(res => {\n      this.setState({\n        pokiID : res.data.id,\n        name : res.data.name,\n        type: res.data.types[0].type.name,\n        image: res.data.sprites.front_default,\n        speed : res.data.stats[0].base_stat,\n        specialDefense : res.data.stats[1].base_stat,\n        specialAttack : res.data.stats[2].base_stat,\n        defense : res.data.stats[3].base_stat,\n        attack :  res.data.stats[4].base_stat,\n        hp :  res.data.stats[5].base_stat,\n        weight: res.data.weight,\n        totalMoves : res.data.moves.length,\n        status: 'visible'\n      })\n      if (res.data.types[1]) {\n       this.setState ({\n         typeTwo : res.data.types[1].type.name\n       })\n      }\n    })\n  }\n\n\n    render() {\n\n      const {pokemons} = this.state;\n      const pokemonList = pokemons.length ? (pokemons.map(pokemon => {\n       \n        return (\n          <div className='poki-wrapper' key={pokemon.name}>\n              <div className='poki-info' onClick={() => {this.handlePock(pokemon.url)}}>\n                < PokiCard name={pokemon.name}\n                            url={pokemon.url}\n                            key={pokemon.name}\n                />\n              </div>\n          </div>\n        )\n      })) : (\n        <div className=\"falseRequest\">\n        <IosRefresh fontSize=\"30px\" color=\"rgb(255, 2, 2)\" rotate={true} /> Loading pokemons ...\n        </div>\n      )\n\n        return (\n          <div className=\"App\">\n            <h1>Pokedex</h1>\n            <div className='main-wrapper'>\n                <div className=\"pokemonList\">\n                  {pokemonList}\n                  <div onClick={this.loadMore} className='load-more' href=\"#\">Load More</div>\n                </div>\n                <div className=\"pokemonSelected\" className={this.state.status}>\n                  <PokiSelected\n                                 pokiID={this.state.pokiID}\n                                 image={this.state.image}\n                                 name={this.state.name}\n                                 type={this.state.type}\n                                 typeTwo={this.state.typeTwo}\n                                 speed={this.state.speed}\n                                 specialDefense={this.state.specialDefense} \n                                 specialAttack={this.state.specialAttack}\n                                 defence={this.state.defense}\n                                 attack={this.state.attack}\n                                 hp={this.state.hp}\n                                 weight={this.state.weight}\n                                 totalMoves={this.state.totalMoves}\n                  />\n                </div>\n            </div>\n          </div> \n        );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}